glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
glm_fit <-predict(price_glm, data.frame(District =2,Area =5200,Electricity =1,Road_Network=770,Hospital =1,Living_Standards=1950,Population=1950,Land_Size=1950,Year=2010 ))
glm_fit <-predict(price_glm, data.frame(District =2,Area =5200,Electricity =1,Road_Network=770,Hospital =1,Living_Standards=1950,Population=1950,Land_Size=1950,Year=2010 ))
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
glm_fit <-predict(price_glm, data.frame(District =2,Area =5200,Electricity =1,Road_Network=770,Hospital =1,Living_Standards=1950,Population=1950,Land_Size=1950,Year=2010 ))
View(house_train)
View(house_train)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
price_glm <- train(form = price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
library(caret)
library(party)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
View(house_train)
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~ ,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~ .,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~ Clearances,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~. ,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
View(house_train)
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/Sample.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/TrainDataset.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
View(house_train)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/TrainDataset.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
View(house_train)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
#glm_fit <- predict(price_glm)
glm_fit <-predict(price_glm, data.frame(District ="Kampala",Area ="Namugongo",Electricity ="Yes",Road_Network="Moderate",Hospital ="Yes",Living_Standards="High",Population="Moderate",Land_Size="1",Year="2010" ))
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
#glm_fit <- predict(price_glm)
glm_fit <-predict(price_glm, data.frame(District ="Kampala",Area ="Namugongo",Electricity ="Yes",Road_Network="Moderate",Hospital ="Yes",Living_Standards="High",Population="Moderate",Land_Size=1,Year=2010 ))
glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
View(house_train)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/TrainDataset.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
View(price_glm)
u1qns<-c("Kampala","Wakiso")
#Year data
year<-c(2007:2022)
shiny::runApp()
#District data
district<-c("Kampala","Wakiso")
#Area data
area<-c("Namugongo","Bukerere","Gayaza","Busabala","Komambogo","Kajjansi","Mengo","Lubowa","Kira Bulindo")
runApp()
shiny::runApp()
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(tidyverse)
library(caret)
library(party)
library(partykit)
# house data
house_train <- read_csv(file = "../Land Value Prediction/TrainDataset.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
price_glm$finalModel
summary(price_glm)
glm_fit[1:10] # Only first 10
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
glm_fit[1:10] # Only first 10
summary(glm_fit)
hist(glm_fit)
View(price_glm)
runApp()
summ(gml_fit)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
glm_fit <- predict(price_glm)
summary(price_glm)
runApp()
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
summary(price_glm)
price_glm$finalModel
summary(price_glm)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
glm_fit[1:10] # Only first 10
hist(glm_fit)
price_glm$finalModel
summary(glm_fit)
formatC(summary(glm_fit) , format="d", big.mark=',')
runApp()
summary(glm_fit)
runApp()
View(house_train)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
summary(price_glm)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
View(price_glm)
runApp()
View(house_train)
runApp()
runApp()
runApp()
runApp()
##########################################################
price_glm$finalModel
View(price_glm)
runApp()
View(house_train)
southern<-as.numeric(paste(factor( house_train[c(1:9),c(9)])))
southern<-as.numeric(paste(factor( house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
south<-data.frame(southern)
southern<-as.numeric(paste(factor( house_train[c(1:9),c(9)])))
southern<-as.numeric(factor( house_train[c(1:9),c(9)]))
southern<-as.numeric(paste(house_train[c(1:9),c(9)]))
south<-data.frame(southern)
ggplot(data=south, aes(price_glm$finalModel)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
ggplot(data=0, aes(price_glm$finalModel)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
south
ggplot(data=south, aes(price_glm$finalModel)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
View(south)
southern<-as.numeric(paste(house_train[c(1:9),c(9)]))
southern<-as.numeric(paste(house_train[c(1:9),c(1)]))
southern<-as.numeric(paste(house_train[c(1,2,3,9),c(9)]))
southern<-as.numeric(paste(factor( house_train[c(1:9),c(9)])))
southern<-as.numeric(paste(factor( house_train[c(1:9),c(9)])))
southern<-as.numeric(paste(factor(house_train[c(1:9),c(9)])))
southern<-as.numeric(paste(factor(house_train[c(1:9),c(8)])))
southern<-paste(house_train[c(1:9),c(9)])
south<-data.frame(southern)
View(south)
southern<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])
south<-data.frame(southern)
southe<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(1)])
south<-data.frame(southe,southern)
View(south)
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southe<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(1)])
southe<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(1)])
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southern<-as.numeric(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(paste(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
factor(
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southe<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(1)])
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-as.numeric(paste(house_train[c(1,2,3,4,5,6,7,8,9),c(9)]))
southern<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(9)])))
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(8)])))
southern<-as.numeric(paste(house_train[c(1,2,3,4,5,6,7,8,9),c(8)]))
southern<-as.numeric(paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(8)])))
southe<-paste(house_train[c(1,2,3,4,5,6,7,8,9),c(1)])
southern<-as.numeric(paste(factor(house_train[c(1:9),c(8)])))
southern<-paste(factor(house_train[c(1,2,3,4,5,6,7,8,9),c(8)]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
as.numeric(paste(factor( glm_fit)))
# Draw plot
ggplot(data=house_train, aes( as.numeric(paste(factor( glm_fit))))) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
# Draw plot
ggplot(data=house_train, aes(glm_fit)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
hist(glm_fit)
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data=house_train, aes(glm_fit)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4") +
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for Model Residuals")
runApp()
runApp()
library(ggplot2) # a for making pretty plots
library(shiny)
library(reshape)
library(rgdal)
#install.packages(c("caret", "party", "partykit", "tidyverse", "lava"))
library(lava)
library(tidyverse)
library(caret)
library(party)
library(partykit)
#mydata <- read.csv("ww/UNRA1.csv", header = FALSE)
# house data
house_train <- read_csv(file = "../Land Value Prediction/TrainDataset.csv")
house_train <- house_train %>%
mutate_if(is.character, factor)
ctrl_none <- trainControl(method = "none")
price_glm <- train(form = Price ~.,
data = house_train,
method = "glm",
trControl = ctrl_none)
##########################################################
price_glm$finalModel
summary(price_glm)
#Using predict() save the fitted values of price_glm object as glm_fit:
# Save fitted values of regression model
glm_fit <- predict(price_glm)
hist(glm_fit)
summary(glm_fit)
glm_fit[1]
glm_fit[2]
runApp()
shiny::runApp()
hist(glm_fit, , col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
hist(glm_fit, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
hist(glm_fit, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
hist(glm_fit, col = "#75AADB", border = "white",
xlab = "Land Prices",
main = "Histogram of trained REgression model")
runApp()
runApp()
